{
    "NDimensionalVector.h": {
        "body": [
            "template <int D, typename T>",
            "struct Vec : public vector<Vec<D - 1, T>> {",
            "\tstatic_assert(D >= 1,",
            "\t\t\t\t\t\t\t\t\"Vector dimension must be greater than zero!\");",
            "\ttemplate <typename... Args>",
            "\tVec(int n = 0, Args... args):",
            "\t\tvector<Vec<D - 1, T>>(n, Vec<D - 1, T>(args...)) {}",
            "};",
            "template <typename T>",
            "struct Vec<1, T> : public vector<T> {",
            "\tVec(int n = 0, const T& val = T()): vector<T>(n, val) {}",
            "};"
        ],
        "prefix": [
            "hack_NDimensionalVector"
        ]
    }
}